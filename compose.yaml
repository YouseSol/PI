services:
  api:
    container_name: pi-api

    build:
      context: .
      dockerfile: ./dockerfiles/api.Dockerfile

    environment:
      API_CONFIG_PATH: runtime.d/APIConfig.yaml
      DEV_MODE: $DEV_MODE

    volumes:
      - ./api:/usr/src/app/api
      - ./runtime.d:/usr/src/app/runtime.d

    ports:
      - 8080:80

    restart: always

  task-manager-beat:
    container_name: pi-task-manager-beat

    build:
      context: .
      dockerfile: ./dockerfiles/taskmanager.Dockerfile

    environment:
      API_CONFIG_PATH: runtime.d/APIConfig.yaml

    volumes:
      - ./runtime.d:/usr/src/app/runtime.d

    depends_on:
      redis:
        condition: service_healthy

  task-manager-worker:
    container_name: pi-task-manager-worker

    build:
      context: .
      dockerfile: ./dockerfiles/taskmanager.Dockerfile

    environment:
      API_CONFIG_PATH: runtime.d/APIConfig.yaml

    volumes:
      - ./runtime.d:/usr/src/app/runtime.d

    command: ["celery", "-A", "taskmanager.beat", "worker", "--concurrency", "1", "--loglevel", "DEBUG"]

    depends_on:
      redis:
        condition: service_healthy

  postgres:
    container_name: pi-postgres-database

    image: postgres:16

    user: root

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

    volumes:
      - postgres-data:/var/lib/postgresql/data

    restart: always

  redis:
    container_name: pi-redis-database

    image: redis:6.2-alpine

    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10

    command: ["redis-server", "--requirepass", $REDIS_PASSWORD, "--save", "120"]

    environment:
      REDIS_PASSWORD: $REDIS_PASSWORD

    volumes:
      - redis-data:/redis/storage

    ports:
      - 6379:6379

    restart: always

volumes:
  postgres-data:
    driver: local

  redis-data:
    driver: local
